{"ast":null,"code":"var _jsxFileName = \"/home/superpc-ubuntu/webprogramming/at-present/src/components/Event_Task/Event_Task.js\";\nimport React from \"react\";\nimport \"./Event_Task.css\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst worker = new Worker(\"Worker.js\");\nworker.postMessage(\"Worker is working!\");\nexport default function Event_Task() {\n  // тут должен был быть компонент               \n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"Event_Task\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Event_Task_plate\",\n      children: \"l\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_c = Event_Task;\nvar _c;\n$RefreshReg$(_c, \"Event_Task\");","map":{"version":3,"names":["React","useSelector","worker","Worker","postMessage","Event_Task"],"sources":["/home/superpc-ubuntu/webprogramming/at-present/src/components/Event_Task/Event_Task.js"],"sourcesContent":["import React from \"react\";\nimport \"./Event_Task.css\";\nimport { useSelector } from \"react-redux\";\n\nconst worker = new Worker(\"Worker.js\");\nworker.postMessage(\"Worker is working!\");\n\nexport default function Event_Task() {\n    // тут должен был быть компонент               \n\n    return (\n        <section className='Event_Task'>\n            <div className='Event_Task_plate'>\n        l</div></section>\n    )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AACzB,SAASC,WAAW,QAAQ,aAAa;AAAC;AAE1C,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAAC,WAAW,CAAC;AACtCD,MAAM,CAACE,WAAW,CAAC,oBAAoB,CAAC;AAExC,eAAe,SAASC,UAAU,GAAG;EACjC;;EAEA,oBACI;IAAS,SAAS,EAAC,YAAY;IAAA,uBAC3B;MAAK,SAAS,EAAC,kBAAkB;MAAA,UAAC;IACrC;MAAA;MAAA;MAAA;IAAA;EAAM;IAAA;IAAA;IAAA;EAAA,QAAU;AAEzB;AAAC,KARuBA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}